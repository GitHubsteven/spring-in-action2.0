spring:
  shardingsphere:
    datasource:
      names: ds-0,ds-1
      ds-0:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3307/ds-0?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
        username: root
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
      ds-1:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3308/ds-1?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
        username: root
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
    sharding:
      tables:
        t_order:
          key-generator:
            column: order_id
            type: SNOWFLAKE
          actual-data-nodes: ds-$->{0..1}.t_order_$->{0..1}
          database-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: ds-$->{order_id % 2}
          table-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: t_order_$->{order_id % 2}
        t_order_item:
          key-generator:
            column: item_id
            type: SNOWFLAKE
          actual-data-nodes: ds-$->{0..1}.t_order_item_$->{0..1}
          database-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: ds-$->{order_id % 2}
          table-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: t_order_item_$->{order_id % 2}
      binding-tables: t_order,t_order_item
      broadcast-tables: t_config
    props:
      sql:
        show: true   # 日志显示SQL
